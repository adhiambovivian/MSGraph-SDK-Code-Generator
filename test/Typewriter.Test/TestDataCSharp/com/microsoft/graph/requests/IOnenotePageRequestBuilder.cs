// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: IEntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The interface IOnenotePageRequestBuilder.
    /// </summary>
    public partial interface IOnenotePageRequestBuilder : IEntityRequestBuilder
    {
        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        new IOnenotePageRequest Request();

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        new IOnenotePageRequest Request(IEnumerable<Option> options);
    
        /// <summary>
        /// Gets the request builder for Content.
        /// </summary>
        /// <returns>The <see cref="IOnenotePageContentRequestBuilder"/>.</returns>
        IOnenotePageContentRequestBuilder Content { get; }
    
        /// <summary>
        /// Gets the request builder for OnenotePageForward.
        /// </summary>
        /// <returns>The <see cref="IOnenotePageForwardRequestBuilder"/>.</returns>
        IOnenotePageForwardRequestBuilder Forward(
            IEnumerable<Recipient> ToRecipients,
            string Details = null,
            string Comment = null);

        /// <summary>
        /// Gets the request builder for OnenotePageForward.
        /// </summary>
        /// <returns>The <see cref="IOnenotePageForwardRequestBuilder"/>.</returns>
        IOnenotePageForwardRequestBuilder Forward(
            IEnumerable<Recipient> ToRecipients,
            string Comment = null);
    
    }
}
