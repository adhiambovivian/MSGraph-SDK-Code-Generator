// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityRequestBuilder.cs.tt

namespace Microsoft.Graph2.CallRecords
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type SegmentRequestBuilder.
    /// </summary>
    public partial class SegmentRequestBuilder : Microsoft.Graph.EntityRequestBuilder, ISegmentRequestBuilder
    {

        /// <summary>
        /// Constructs a new SegmentRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="Microsoft.Graph.IBaseClient"/> for handling requests.</param>
        public SegmentRequestBuilder(
            string requestUrl,
            Microsoft.Graph.IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new ISegmentRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new ISegmentRequest Request(IEnumerable<Microsoft.Graph.Option> options)
        {
            return new SegmentRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for RefTypes.
        /// </summary>
        /// <returns>The <see cref="ISegmentRefTypesCollectionWithReferencesRequestBuilder"/>.</returns>
        public ISegmentRefTypesCollectionWithReferencesRequestBuilder RefTypes
        {
            get
            {
                return new SegmentRefTypesCollectionWithReferencesRequestBuilder(this.AppendSegmentToRequestUrl("refTypes"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for RefType.
        /// </summary>
        /// <returns>The <see cref="Microsoft.Graph.ICallWithReferenceRequestBuilder"/>.</returns>
        public Microsoft.Graph.ICallWithReferenceRequestBuilder RefType
        {
            get
            {
                return new Microsoft.Graph.CallWithReferenceRequestBuilder(this.AppendSegmentToRequestUrl("refType"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for SessionRef.
        /// </summary>
        /// <returns>The <see cref="ISessionWithReferenceRequestBuilder"/>.</returns>
        public ISessionWithReferenceRequestBuilder SessionRef
        {
            get
            {
                return new SessionWithReferenceRequestBuilder(this.AppendSegmentToRequestUrl("sessionRef"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Photo.
        /// </summary>
        /// <returns>The <see cref="IPhotoRequestBuilder"/>.</returns>
        public IPhotoRequestBuilder Photo
        {
            get
            {
                return new PhotoRequestBuilder(this.AppendSegmentToRequestUrl("photo"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for SegmentForward.
        /// </summary>
        /// <returns>The <see cref="ISegmentForwardRequestBuilder"/>.</returns>
        public ISegmentForwardRequestBuilder Forward(
            IEnumerable<Microsoft.Graph.Recipient> ToRecipients,
            Microsoft.Graph.Recipient SingleRecipient,
            IEnumerable<Session> MultipleSessions,
            Session SingleSession,
            string Comment = null)
        {
            return new SegmentForwardRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph2.callRecords.forward"),
                this.Client,
                ToRecipients,
                SingleRecipient,
                MultipleSessions,
                SingleSession,
                Comment);
        }

        /// <summary>
        /// Gets the request builder for SegmentTestAction.
        /// </summary>
        /// <returns>The <see cref="ISegmentTestActionRequestBuilder"/>.</returns>
        public ISegmentTestActionRequestBuilder TestAction(
            IdentitySet value = null)
        {
            return new SegmentTestActionRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph2.callRecords.testAction"),
                this.Client,
                value);
        }
    
    }
}
