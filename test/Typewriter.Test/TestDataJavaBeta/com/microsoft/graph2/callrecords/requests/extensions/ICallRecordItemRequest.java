// Template Source: IBaseMethodRequest.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph2.callrecords.requests.extensions;
import com.microsoft.graph2.callrecords.models.extensions.CallRecord;
import com.microsoft.graph2.callrecords.requests.extensions.ICallRecordItemRequest;

import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.concurrency.IExecutors;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequest;
import com.microsoft.graph.http.HttpMethod;
import com.microsoft.graph.http.IHttpRequest;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The interface for the Call Record Item Request.
 */
public interface ICallRecordItemRequest extends IHttpRequest {

    /**
     * Patches the CallRecordItem
     *
     * @param srcCallRecord the CallRecord with which to PATCH
     * @param callback the callback to be called after success or failure
     */
    void patch(CallRecord srcCallRecord, final ICallback<? super CallRecord> callback);

    /**
     * Patches the CallRecordItem
     *
     * @param srcCallRecord the CallRecord with which to PATCH
     * @return the CallRecord
     * @throws ClientException an exception occurs if there was an error while the request was sent
     */
    CallRecord patch(CallRecord srcCallRecord) throws ClientException;

    /**
     * Puts the CallRecordItem
     *
     * @param srcCallRecord the CallRecord to PUT
     * @param callback the callback to be called after success or failure
     */
    void put(CallRecord srcCallRecord, final ICallback<? super CallRecord> callback);

    /**
     * Puts the CallRecordItem
     *
     * @param srcCallRecord the CallRecord to PUT
     * @return the CallRecord
     * @throws ClientException an exception occurs if there was an error while the request was sent
     */
     CallRecord put(CallRecord srcCallRecord) throws ClientException;
    /**
     * Gets the CallRecord
     *
     * @param callback the callback to be called after success or failure
     */
    void get(final ICallback<? super CallRecord> callback);

    /**
     * Gets the CallRecord
     *
     * @return the CallRecord
     * @throws ClientException an exception occurs if there was an error while the request was sent
     */
    CallRecord get() throws ClientException;

    /**
     * Sets the select clause for the request
     *
     * @param value the select clause
     * @return the updated request
     */
    ICallRecordItemRequest select(final String value);

    /**
     * Sets the expand clause for the request
     *
     * @param value the expand clause
     * @return the updated request
     */
    ICallRecordItemRequest expand(final String value);

}
