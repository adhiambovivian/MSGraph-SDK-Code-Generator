// Template Source: BaseEntityRequestBuilder.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph2.callrecords.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph2.callrecords.models.extensions.Segment;
import com.microsoft.graph.models.extensions.Recipient;
import com.microsoft.graph2.callrecords.models.extensions.Session;
import com.microsoft.graph.models.extensions.IdentitySet;
import com.microsoft.graph.requests.extensions.IEntityType3CollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IEntityType3RequestBuilder;
import com.microsoft.graph.requests.extensions.EntityType3CollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.EntityType3RequestBuilder;
import com.microsoft.graph.requests.extensions.ICallRequestBuilder;
import com.microsoft.graph.requests.extensions.CallRequestBuilder;
import com.microsoft.graph2.callrecords.requests.extensions.ISessionRequestBuilder;
import com.microsoft.graph2.callrecords.requests.extensions.SessionRequestBuilder;
import com.microsoft.graph2.callrecords.requests.extensions.IPhotoRequestBuilder;
import com.microsoft.graph2.callrecords.requests.extensions.PhotoRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Segment Request Builder.
 */
public class SegmentRequestBuilder extends BaseRequestBuilder implements ISegmentRequestBuilder {

    /**
     * The request builder for the Segment
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public SegmentRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the ISegmentRequest instance
     */
    public ISegmentRequest buildRequest(final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the ISegmentRequest instance
     */
    public ISegmentRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new com.microsoft.graph2.callrecords.requests.extensions.SegmentRequest(getRequestUrl(), getClient(), requestOptions);
    }


    public IEntityType3CollectionWithReferencesRequestBuilder refTypes() {
        return new EntityType3CollectionWithReferencesRequestBuilder(getRequestUrlWithAdditionalSegment("refTypes"), getClient(), null);
    }

    public IEntityType3WithReferenceRequestBuilder refTypes(final String id) {
        return new EntityType3WithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("refTypes") + "/" + id, getClient(), null);
    }

    /**
     * Gets the request builder for Call
     *
     * @return the ICallWithReferenceRequestBuilder instance
     */
    public ICallWithReferenceRequestBuilder refType() {
        return new CallWithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("refType"), getClient(), null);
    }

    /**
     * Gets the request builder for Session
     *
     * @return the ISessionWithReferenceRequestBuilder instance
     */
    public ISessionWithReferenceRequestBuilder sessionRef() {
        return new SessionWithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("sessionRef"), getClient(), null);
    }

    /**
     * Gets the request builder for Photo
     *
     * @return the IPhotoRequestBuilder instance
     */
    public IPhotoRequestBuilder photo() {
        return new PhotoRequestBuilder(getRequestUrlWithAdditionalSegment("photo"), getClient(), null);
    }

    public ISegmentForwardRequestBuilder forward(final java.util.List<Recipient> toRecipients, final Recipient singleRecipient, final java.util.List<Session> multipleSessions, final Session singleSession, final String comment) {
        return new SegmentForwardRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph2.callRecords.forward"), getClient(), null, toRecipients, singleRecipient, multipleSessions, singleSession, comment);
    }

    public ISegmentTestActionCollectionRequestBuilder testAction(final IdentitySet value) {
        return new SegmentTestActionCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph2.callRecords.testAction"), getClient(), null, value);
    }
}
